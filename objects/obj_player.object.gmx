<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerD</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
*
*   Player Constants
*   Written by Joe Dolan
*/

image_speed = 0;

playable = true;
moveSpeed = 2.0;
instance_create(0, 0, obj_cursor);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
*   Bacon Game Jam 7
*   Keyboard initialization function
*   Written by Joe Dolan
*/

k_up = ord('W');
k_down = ord('S');
k_left = ord('A');
k_right = ord('D');


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( playable ){
    visible = true;
    if( keyboard_check( k_left )){
        x -= moveSpeed;
    }
    else if( keyboard_check( k_right )){
        x += moveSpeed;
    }
    if( keyboard_check( k_up )){
        y -= moveSpeed;
    }
    else if( keyboard_check( k_down )){
        y += moveSpeed;
    }
}
else{
    visible = false;
}

if( keyboard_check_pressed( vk_escape )){
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( keyboard_check( vk_shift )){
    if( mouse_check_button_pressed( mb_left )){
        instance_create(x,y,obj_bullet);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( keyboard_check( k_down )){
    if( !keyboard_check( k_left ) &amp;&amp; !keyboard_check( k_right )){
        sprite_index = spr_playerD;
        image_speed = 0.25;
    }
    else if( keyboard_check( k_left )){
        sprite_index = spr_playerLD;
        image_speed = 0.25;
    }
    else if( keyboard_check( k_right )){
        sprite_index = spr_playerDR;
    }
    moving = true;
}
else if( !keyboard_check( k_down ) &amp;&amp; keyboard_check( k_left )){
    sprite_index = spr_playerL;
    image_speed = 0.25;
    moving = true;
}
else if( !keyboard_check( k_down ) &amp;&amp; keyboard_check( k_right )){
    sprite_index = spr_playerR;
    image_speed = 0.25;
    moving = true;
}
if( keyboard_check( k_up )){
    if( !keyboard_check( k_left ) &amp;&amp; !keyboard_check( k_right)){
        sprite_index = spr_playerU;
        image_speed = 0.25;
    }
    else if( keyboard_check( k_left )){
        sprite_index = spr_playerUL;
        image_speed = 0.25;
    }
    else if( keyboard_check( k_right )){
        sprite_index = spr_playerUR;
        image_speed = 0.25;
    }
    moving = true;
}
//If you're not pressing any god damn keys
if( !keyboard_check( k_up ) &amp;&amp; !keyboard_check( k_down ) &amp;&amp;
    !keyboard_check( k_left) &amp;&amp; !keyboard_check( k_right )){
    moving = false;    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( !moving ){
    if( sprite_index == spr_playerD ){
        sprite_index = spr_playerSD;
    }
    else if( sprite_index == spr_playerLD ){
        sprite_index = spr_playerSLD;
    }
    else if( sprite_index == spr_playerL ){
        sprite_index = spr_playerSL;
    }
    else if( sprite_index == spr_playerUL ){
        sprite_index = spr_playerSUL;
    }
    else if( sprite_index == spr_playerU ){
        sprite_index = spr_playerSU;
    }
    else if( sprite_index == spr_playerUR ){
        sprite_index = spr_playerSUR;
    }
    else if( sprite_index == spr_playerR ){
        sprite_index = spr_playerSR;
    }
    else if( sprite_index == spr_playerDR ){
        sprite_index = spr_playerSDR;
    }
}
else{
    if( sprite_index == spr_playerSD ){
        sprite_index = spr_playerD;
    }
    else if( sprite_index == spr_playerSLD ){
        sprite_index = spr_playerLD;
    }
    else if( sprite_index == spr_playerSL ){
        sprite_index = spr_playerL;
    }
    else if( sprite_index == spr_playerSUL ){
        sprite_index = spr_playerUL;
    }
    else if( sprite_index == spr_playerSU ){
        sprite_index = spr_playerU;
    }
    else if( sprite_index == spr_playerSUR ){
        sprite_index = spr_playerUR;
    }
    else if( sprite_index == spr_playerSR ){
        sprite_index = spr_playerR;
    }
    else if( sprite_index == spr_playerSDR ){
        sprite_index = spr_playerDR;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bed">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 0;
y += 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sign">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 0;
y += 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 0;
y += 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_friend">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 0;
y += 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tocabin">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 240;
y = 320;
room = rm_cabin;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_leaveRoom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 272;
y = 196;
room = rm_outside;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blockaide">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 0;
y += 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
